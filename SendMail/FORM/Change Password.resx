<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr4AAA6+AepCscAAAASnSURBVEhLpZN7TNVlGMdfYTmi6REpoMW11lZITeqP/qj8
        w1kzA+UuFxFQpywvrWkLt1z2R7laF6kmAoFyT5gUli6EDaO2NK7ncFAcBRxuHQ5wjge53749z3N+MiV0
        tJ7ty/vwvs/z+b6/932PWk4EHAqAClNQezRRLnP/J5wSnaA7/AiiioJxsjEBP5nexW+Wj0Wc8xyvcQ3X
        am3LjGSFI9Wv45e/P4TRloFWaxb0QxloGjol4pzneI1ruJZ7tO4Hh2eaDiV/HUSL9TSah7LQMJgJw1Au
        rlvz0WYtRP1wrowNwzmyxjVcyz3cq2GWDq9ja3B54AMYbDmoG8rGH4MZqLUcww89B1Gh6YImznmtjkzY
        tMWWK73M0HCLYq9CefdR6G35uDZ4iiCHkN21BQVdCSjs2oFC0yLRHK/lmEJQZT6MZmsOWu3FwmCWRnWE
        U6oT0mojcN1+DtXmj5DTFYX8rngUm5JQZNp5X5V0J+GSJRXqM4XEmqfwcmkg2m+fFxYzNbxSbmku0N/K
        R0XfEXzbGY2z1JxnShYtBWZ9R/Dv+3dDfaIgMU6aA2IqXxIWMwUelP4MUn7chNrhz+lzY1HUu4t27oDw
        6MgT74Hzzsv6Uhbg46PjGLk9IvnaDBdcvfWVMJmtAo4HIPfPdwi+A/mmXchsj0JpbwrtMFlAZzt2oqAj
        FcWUs3j+kmUf1AkHfGpyCpMTE7L7y73nsfKkQl5vojCZrVSqQrE5FbmdBO3bhwvmPYirfhbpN8KQdXM7
        TrfFkKJlzLwZg7zO2IWdz0zPYHpmRvLKnjI89CX9ftrXC4uZzFYPH3XGOfMBZHfspi/YKxfW3WmWMbTO
        HTEGL0TrHYq74Qn1qQM+PzuP+fl5ySu7y+CSrrC5JlAMmMVMMVh7wpXcDuBM136s/GYFMAzY++3AGMQk
        uc0biUZfGfl/jvlZ/iMpfia4K8FfqXoUCUZvMWAxU3fcFcrlfSeUWt7D260vwD3TGaC7MvV0w2K2AHS0
        DF13kXayANfIFHfDk1o9Ea/3QEyzG/YbnxMms8XgLWMwIhs8sbHqMThTA5sMDFhgG7IBk0QiI77EuZm5
        hWNZDE8weIhBgsEX2+rdhSkG/JQ2EDi22Rtxem8El69xmBDUOmyF3W7H2OgYvZRJzE7z2dBr6S4X+KtV
        7kg0+CC2yVsUb/DGdhqZw0x5phxPn9EhzuiHyEYqbvFFUIkOK+hFgB6I3W7DyOgIpienBX6l/6LANxA8
        VO+PLY2+C3qDFNngg/hWfzBT4BxPfLEKm39/HBFNvghroCK9LzbWeDhM6GimJhxP8epAlbwWhm/V++FN
        ArIYHk5gVmSzn7CYqeEd8WTmKoRRUxgVbyOTCCrkIxATirrBGoGHXFmHkLvgdwy4h3vDDX5gloa9N9aX
        uiGyxR/btIYIuhcG6r5WcCM54D7/gosBKcoYAGZouKWDL1m+pMlPTMKbfLCVdsVaCs5HGt7sLzvnXg3z
        4AgsWI3XrvkglBpDyEiA9YtEc7zGF8213KO1Ly+C8nV4scINm371op3SFxCIDVmc8xyvcQ3Xam3/Pfgt
        M+T54tVyBCzOBXznnd83lPoHlGyh8ueiM54AAAAASUVORK5CYII=
</value>
  </data>
</root>